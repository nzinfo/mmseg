Coreseek MMSeg Tokenizer
================================

使用 MMSeg 进行中文切分，支持词组模式和全切分；
包括两个词库，基础词库和短语词库。
其中短语词库可以预先定义切分方案，如果没有给定切分方案，则使用基础词库进行切分；
对于词条可以设置属性

词库分五种:

1 基本词典
    保存系统的基本词条, 主要用于定义 In Vocab
2 短语词典
    已知的常用切分方案和标注, 实际是 基本词典的一种特殊用法;

3 增量词典
    在系统运行过程中, 由其他软件系统向系统追加的新词;
    追加的新词可以属于不同的 基本词典或短语词典;
    系统可以定期合并追加的新词到已有的词典中?
      - 增量词典存在的意义在于可以及时的将追加的新词合并到主系统中, 如果需要更新主词表, 应重建之;
      - 系统默认不支持增量词典的合并
    Ref: http://www.tkl.iis.u-tokyo.ac.jp/~ynaga/cedar/ 支持增量可更新的 darts, 代价为 darts-clone 存储空间的两倍
    由于 cedar 支持读取字符串信息, 可以考虑修改 目前短语词库的索引部分实现, 直接使用cedar, 再额外通过 darts 构建
    - 考虑到目前已经可用, 额外提供一个版本.

4 用户自定义词典
    在当前用户上下文中, 增加的新词. 仅对用户有效;
    在 SASS 模式下, 可以根据用户的 Session, 自动处理.
    用户可以在分词的时候, 通过开关自动开启或关闭.

5 上下文新词
    在当前处理文章的上下文中, 系统新发现的词.

其中 增量 | 用户自定义 | 上下文新词 被系统保留

系统使用 CRF 进行未登录词识别; 可能同时使用多个 CRF 模型; CRF 模型, 依赖基本的MMSEG预处理分词法

Build On Mac with brew
===============================
cmake .. -DPYTHON_LIBRARY=/usr/local/Cellar/python/2.7.6/Frameworks/Python.framework/Versions/2.7/lib/libpython2.7.dylib


Design
================================
1 使用Python 接口处理 字符类型 | 转小写(异体字)
2 每个词库有唯一的 最长255 个字长的名字, 系统不保证名字的唯一性,参考 JAVA 的包管理;
3 LUA 脚本通过注册回调的方式与分词系统发生交互
    - 注册在字上, 当出现了这一个字,则
    - 注册在Token上, 当出现了这个 Token
    - 注册在Token类型上, 主要是数字 ,则 ; 部分词条拥有固定的词类型, 1 char
    - 注册在词库上, 当出现了这个词库中的词, 主要用于专有词典|查询解析
    - LUA脚本可以
        1 修改分词结果
        2 修改标注结果
        3 修改自定义的 annote, 脚本修改这些内容时,应给定自己的特殊 tag, 如果不指定 tag, 这修改系统默认的
          ( 比如, 用于识别 文中出现的 人名 | 时间 | 剧集 , 格式为 [大类型=pos|ner|annote] [类型, value] )
    - LUA 脚本可以查看当前句子的上下文窗口, 前后 100 字
      可以查询系统已经标明的识别出的未登录词 (用于人名)

    - 在新增未登录词时, LUA 也能被回调, 用于根据规则, 处理人的称呼| 简写;

4 系统可以加载多个词库, 词库在运行时可以合并到唯一的一个 dart 上,用于加速查找
5 系统最多可以加载 32 个词库
6 词库加载是,应该增加 options 参数,用于控制词库加载时的具体行为
7 需要引入 cpp 的 log 库 -> glog
8 需要提供脚本, 构造词库, 解析Sphinx 的字符映射文件
9 支持在运行时动态增加新词条
10 提供Python的基于 Flask 框架的分词法接口, 用于测试

Log
===============================
1 集成了 glog , 目前发现只有
    GLOG_logtostderr=1 ./src/tst_cmake
  能够看到 Log 信息, 不过, 对于库函数来说, 默认不记录在文件中, 这个行为是正确的.

2 如果在CentOS5 上编译,需要额外对 glog 进行 configure 生成新的 config.h
