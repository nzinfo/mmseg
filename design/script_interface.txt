脚本的处理流程
1 调用 init 初始化关注的 规则
2 注册结果的回调函数
3 当出现 SegBlock 的切换时， 通知到脚本管理
4 脚本管理调用 LUA 注册过的回调

  - 读取当前block 的起始位置
  - 读取特定范围的字符串信息（上不能超过 上一个 block | 下并不能超过本 blcok）
  - 读取特定范围的限制，范围使用 icode 的长度表示

? 如何读取 Rules Hit
    (pos, rule_id), 处理为一个数组？ 如果下一个 token 不足以写入，则先返回 迭代器；
    使用该迭代器 可以继续读取数据；


【API】
=================================
1 如果脚本的返回值不是 0 ，表示当前脚本初始化出错或禁用。此时注册的全部 callback & rule 应该标记为无效
2 注册的 rule_id 必须是全局唯一的，也就是各个 script 之间， 必须的 rule 必须进行协商。
  如果 rule_id 已经被注册过，应该在 返回值上有所表示
  可以同 script_id　读取到　原始的 script name


